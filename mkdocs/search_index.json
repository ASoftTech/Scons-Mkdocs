{
    "docs": [
        {
            "location": "/",
            "text": "Scons Tools - Grbd\n\n\nOverview\n\n\nThis is a collection of tools / tests for scons. \n\nThis includes:\n\n\n\n\nMkdocs\n\n\nPandoc\n\n\nDoxygen",
            "title": "Home"
        },
        {
            "location": "/#scons-tools-grbd",
            "text": "",
            "title": "Scons Tools - Grbd"
        },
        {
            "location": "/#overview",
            "text": "This is a collection of tools / tests for scons.  \nThis includes:   Mkdocs  Pandoc  Doxygen",
            "title": "Overview"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsServer/",
            "text": "MkdocsServer\n\n\nOverview\n\n\nThis builder can be used to trigger Mkdocs into server mode.\nThis is useful when you want a preview of the site that will be built before publishing it live to github pages.\n\n\nDuring server mode mkdocs pulls all the markdown and images into memory before rendering it as a http server.\nTypically via the link of\n\n\n\n\nhttp://127.0.0.1:8000\n\n\n\n\nWith live reload enabled (which is the default) and changes make to the markdown files will auto trigger a reload of the web page\nto reflect any changes made.\n\n\nOne example use case of the MkdocsServer builder would be to have other builders change the source //docs// directory\n(such as importing doxygen generated files)\nBefore triggering the MkdocsServer builder to then serve out the page as a preview.\nThis could be done via the scons dependency mechanism.\n\n\nExample useage:\n\n\nEnsureSConsVersion(3,0,0)\nenv = Environment(ENV = os.environ, tools = ['Docs.Mkdocs'], toolpath = [PyPackageDir('scons_tools_grbd.Tools')])\ntarget = env.MkdocsServer()\nDefault(target)\n\n\n\n\nOptionally a source parameter can be passed to specify a different location of mkdocs.yml\n\n\ntarget = env.MkdocsServer('someother.yml')\n\n\n\n\nAn example of changing a setting:\n\n\nenv.Replace(Mkdocs_ServeUrl = '127.0.0.1:8001')\nenv.Replace(Mkdocs_Strict = True)\n\n\n\n\nAvailable Options\n\n\n\n\n\n\n\n\nenv setting\n\n\nValues\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nMkdocs\n\n\n\u2018mkdocs\u2019\n\n\nOverride the executable / path to use\n\n\n\n\n\n\nMkdocs_WorkingDir\n\n\nCurrent Directory\n\n\nCan be set to override the working directory where mkdocs will be run\n\n\n\n\n\n\nMkdocs_ServeUrl\n\n\nNone, \u2018127.0.0.1:8000\u2019 (default)\n\n\nThe server URL to use when hosting the page\n\n\n\n\n\n\nMkdocs_Strict\n\n\nFalse (default), True\n\n\nIf to use mkdocs in strict mode\n\n\n\n\n\n\nMkdocs_Theme\n\n\nNone (default), \u2018cyborg\u2019\n\n\nThis setting can be used to override the theme specified within mkdocs.yml\n\n\n\n\n\n\nMkdocs_ThemeDir\n\n\nNone (default), \u2018theme\u2019\n\n\nThis setting can be used to override / specify a theme directory to overlay files on top of the selected theme\n\n\n\n\n\n\nMkdocs_LiveReload\n\n\nNone (default), True, False\n\n\nIf to enable / disable the live reload on change of source markdown (default in on)\n\n\n\n\n\n\nMkdocs_DirtyReload\n\n\nFalse (default), True\n\n\nIf to enable dirty reload mode\n\n\n\n\n\n\nMkdocs_Quiet\n\n\nFalse (default), True\n\n\nSilence warnings\n\n\n\n\n\n\nMkdocs_Verbose\n\n\nFalse (default), True\n\n\nEnable verbose output\n\n\n\n\n\n\nMkdocs_ExtraArgs\n\n\n[] (default)\n\n\nAdditional options to pass to mkdocs as an array",
            "title": "MkdocsServer"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsServer/#mkdocsserver",
            "text": "",
            "title": "MkdocsServer"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsServer/#overview",
            "text": "This builder can be used to trigger Mkdocs into server mode.\nThis is useful when you want a preview of the site that will be built before publishing it live to github pages.  During server mode mkdocs pulls all the markdown and images into memory before rendering it as a http server.\nTypically via the link of   http://127.0.0.1:8000   With live reload enabled (which is the default) and changes make to the markdown files will auto trigger a reload of the web page\nto reflect any changes made.  One example use case of the MkdocsServer builder would be to have other builders change the source //docs// directory\n(such as importing doxygen generated files)\nBefore triggering the MkdocsServer builder to then serve out the page as a preview.\nThis could be done via the scons dependency mechanism.",
            "title": "Overview"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsServer/#example-useage",
            "text": "EnsureSConsVersion(3,0,0)\nenv = Environment(ENV = os.environ, tools = ['Docs.Mkdocs'], toolpath = [PyPackageDir('scons_tools_grbd.Tools')])\ntarget = env.MkdocsServer()\nDefault(target)  Optionally a source parameter can be passed to specify a different location of mkdocs.yml  target = env.MkdocsServer('someother.yml')  An example of changing a setting:  env.Replace(Mkdocs_ServeUrl = '127.0.0.1:8001')\nenv.Replace(Mkdocs_Strict = True)",
            "title": "Example useage:"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsServer/#available-options",
            "text": "env setting  Values  Description      Mkdocs  \u2018mkdocs\u2019  Override the executable / path to use    Mkdocs_WorkingDir  Current Directory  Can be set to override the working directory where mkdocs will be run    Mkdocs_ServeUrl  None, \u2018127.0.0.1:8000\u2019 (default)  The server URL to use when hosting the page    Mkdocs_Strict  False (default), True  If to use mkdocs in strict mode    Mkdocs_Theme  None (default), \u2018cyborg\u2019  This setting can be used to override the theme specified within mkdocs.yml    Mkdocs_ThemeDir  None (default), \u2018theme\u2019  This setting can be used to override / specify a theme directory to overlay files on top of the selected theme    Mkdocs_LiveReload  None (default), True, False  If to enable / disable the live reload on change of source markdown (default in on)    Mkdocs_DirtyReload  False (default), True  If to enable dirty reload mode    Mkdocs_Quiet  False (default), True  Silence warnings    Mkdocs_Verbose  False (default), True  Enable verbose output    Mkdocs_ExtraArgs  [] (default)  Additional options to pass to mkdocs as an array",
            "title": "Available Options"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsBuild/",
            "text": "MkdocsBuild\n\n\nOverview\n\n\nThis builder can be used to trigger Mkdocs into building the source markdown into a html output on disk.\nThis is typically the sort of thing you would do before publishing the html content to a site.\n\n\nExample useage:\n\n\nEnsureSConsVersion(3,0,0)\nenv = Environment(ENV = os.environ, tools = ['Docs.Mkdocs'], toolpath = [PyPackageDir('scons_tools_grbd.Tools')])\ntarget = env.MkdocsBuild()\nDefault(target)\n\n\n\n\nOptionally a source parameter can be passed to specify a different location of mkdocs.yml\n\n\ntarget = env.MkdocsBuild('someother.yml')\n\n\n\n\nAn example of changing a setting:\n\n\nenv.Replace(Mkdocs_CleanBuild = True)\nenv.Replace(Mkdocs_Strict = True)\n\n\n\n\nAvailable Options\n\n\n\n\n\n\n\n\nenv setting\n\n\nValues\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nMkdocs\n\n\n\u2018mkdocs\u2019\n\n\nOverride the executable / path to use\n\n\n\n\n\n\nMkdocs_WorkingDir\n\n\nCurrent Directory\n\n\nCan be set to override the working directory where mkdocs will be run\n\n\n\n\n\n\nMkdocs_CleanBuild\n\n\nNone (default), True, False\n\n\nIf to clean the build directory during the build (default is yes)\n\n\n\n\n\n\nMkdocs_Strict\n\n\nFalse (default), True\n\n\nIf to use mkdocs in strict mode\n\n\n\n\n\n\nMkdocs_Theme\n\n\nNone (default), \u2018cyborg\u2019\n\n\nThis setting can be used to override the theme specified within mkdocs.yml\n\n\n\n\n\n\nMkdocs_ThemeDir\n\n\nNone (default), \u2018theme\u2019\n\n\nThis setting can be used to override / specify a theme directory to overlay files on top of the selected theme\n\n\n\n\n\n\nMkdocs_SiteDir\n\n\n\u2018site\u2019 (default)\n\n\nThis setting controls the output directory for the html to be rendered\n\n\n\n\n\n\nMkdocs_Quiet\n\n\nFalse (default), True\n\n\nSilence warnings\n\n\n\n\n\n\nMkdocs_Verbose\n\n\nFalse (default), True\n\n\nEnable verbose output\n\n\n\n\n\n\nMkdocs_ExtraArgs\n\n\n[] (default)\n\n\nAdditional options to pass to mkdocs as an array",
            "title": "MkdocsBuild"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsBuild/#mkdocsbuild",
            "text": "",
            "title": "MkdocsBuild"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsBuild/#overview",
            "text": "This builder can be used to trigger Mkdocs into building the source markdown into a html output on disk.\nThis is typically the sort of thing you would do before publishing the html content to a site.",
            "title": "Overview"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsBuild/#example-useage",
            "text": "EnsureSConsVersion(3,0,0)\nenv = Environment(ENV = os.environ, tools = ['Docs.Mkdocs'], toolpath = [PyPackageDir('scons_tools_grbd.Tools')])\ntarget = env.MkdocsBuild()\nDefault(target)  Optionally a source parameter can be passed to specify a different location of mkdocs.yml  target = env.MkdocsBuild('someother.yml')  An example of changing a setting:  env.Replace(Mkdocs_CleanBuild = True)\nenv.Replace(Mkdocs_Strict = True)",
            "title": "Example useage:"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsBuild/#available-options",
            "text": "env setting  Values  Description      Mkdocs  \u2018mkdocs\u2019  Override the executable / path to use    Mkdocs_WorkingDir  Current Directory  Can be set to override the working directory where mkdocs will be run    Mkdocs_CleanBuild  None (default), True, False  If to clean the build directory during the build (default is yes)    Mkdocs_Strict  False (default), True  If to use mkdocs in strict mode    Mkdocs_Theme  None (default), \u2018cyborg\u2019  This setting can be used to override the theme specified within mkdocs.yml    Mkdocs_ThemeDir  None (default), \u2018theme\u2019  This setting can be used to override / specify a theme directory to overlay files on top of the selected theme    Mkdocs_SiteDir  \u2018site\u2019 (default)  This setting controls the output directory for the html to be rendered    Mkdocs_Quiet  False (default), True  Silence warnings    Mkdocs_Verbose  False (default), True  Enable verbose output    Mkdocs_ExtraArgs  [] (default)  Additional options to pass to mkdocs as an array",
            "title": "Available Options"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsPublish/",
            "text": "MkdocsPublish\n\n\nOverview\n\n\nThis builder can be used to trigger Mkdocs into pushing the build output to the github pages branch.\nThis way it will be visible publicly.\n\n\nTypically the output will be visible under something like\n\n\n\n\nhttp://\nOrganisationName\n.github.io/\nRepoName\n\n\n\n\nExample useage:\n\n\nEnsureSConsVersion(3,0,0)\nenv = Environment(ENV = os.environ, tools = ['Docs.Mkdocs'], toolpath = [PyPackageDir('scons_tools_grbd.Tools')])\ntarget = env.MkdocsPublish('commit message')\nDefault(target)\n\n\n\n\nOptionally a source parameter can be passed to specify a different location of mkdocs.yml\n\n\ntarget = env.MkdocsPublish('commit message', 'someother.yml')\n\n\n\n\nAn example of changing a setting:\n\n\nenv.Replace(Mkdocs_CleanBuild = True)\n\n\n\n\nAvailable Options\n\n\n\n\n\n\n\n\nenv setting\n\n\nValues\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nMkdocs\n\n\n\u2018mkdocs\u2019\n\n\nOverride the executable / path to use\n\n\n\n\n\n\nMkdocs_WorkingDir\n\n\nCurrent Directory\n\n\nCan be set to override the working directory where mkdocs will be run\n\n\n\n\n\n\nMkdocs_CleanBuild\n\n\nNone (default), True, False\n\n\nIf to clean the build directory during the build (default is yes)\n\n\n\n\n\n\nMkdocs_RemoteBranch\n\n\nNone (default)\n\n\nOverride the remote branch name to use when pushing to github\n\n\n\n\n\n\nMkdocs_RemoteName\n\n\nNone (default)\n\n\nOverride the remote name to use when pushing to github\n\n\n\n\n\n\nMkdocs_ForcePush\n\n\nFalse (default), True\n\n\nDo a force push when pushing to github\n\n\n\n\n\n\nMkdocs_Quiet\n\n\nFalse (default), True\n\n\nSilence warnings\n\n\n\n\n\n\nMkdocs_Verbose\n\n\nFalse (default), True\n\n\nEnable verbose output\n\n\n\n\n\n\nMkdocs_ExtraArgs\n\n\n[] (default)\n\n\nAdditional options to pass to mkdocs as an array",
            "title": "MkdocsPublish"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsPublish/#mkdocspublish",
            "text": "",
            "title": "MkdocsPublish"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsPublish/#overview",
            "text": "This builder can be used to trigger Mkdocs into pushing the build output to the github pages branch.\nThis way it will be visible publicly.  Typically the output will be visible under something like   http:// OrganisationName .github.io/ RepoName",
            "title": "Overview"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsPublish/#example-useage",
            "text": "EnsureSConsVersion(3,0,0)\nenv = Environment(ENV = os.environ, tools = ['Docs.Mkdocs'], toolpath = [PyPackageDir('scons_tools_grbd.Tools')])\ntarget = env.MkdocsPublish('commit message')\nDefault(target)  Optionally a source parameter can be passed to specify a different location of mkdocs.yml  target = env.MkdocsPublish('commit message', 'someother.yml')  An example of changing a setting:  env.Replace(Mkdocs_CleanBuild = True)",
            "title": "Example useage:"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsPublish/#available-options",
            "text": "env setting  Values  Description      Mkdocs  \u2018mkdocs\u2019  Override the executable / path to use    Mkdocs_WorkingDir  Current Directory  Can be set to override the working directory where mkdocs will be run    Mkdocs_CleanBuild  None (default), True, False  If to clean the build directory during the build (default is yes)    Mkdocs_RemoteBranch  None (default)  Override the remote branch name to use when pushing to github    Mkdocs_RemoteName  None (default)  Override the remote name to use when pushing to github    Mkdocs_ForcePush  False (default), True  Do a force push when pushing to github    Mkdocs_Quiet  False (default), True  Silence warnings    Mkdocs_Verbose  False (default), True  Enable verbose output    Mkdocs_ExtraArgs  [] (default)  Additional options to pass to mkdocs as an array",
            "title": "Available Options"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsJsonBuild/",
            "text": "MkdocsJsonBuild\n\n\nOverview\n\n\nThis builder can be used to trigger Mkdocs into building the source markdown into a json output on disk.\nThis can be used as an import into other tools.\n\n\nExample useage:\n\n\nEnsureSConsVersion(3,0,0)\nenv = Environment(ENV = os.environ, tools = ['Docs.Mkdocs'], toolpath = [PyPackageDir('scons_tools_grbd.Tools')])\ntarget = env.MkdocsJsonBuild()\nDefault(target)\n\n\n\n\nOptionally a source parameter can be passed to specify a different location of mkdocs.yml\n\n\ntarget = env.MkdocsJsonBuild('someother.yml')\n\n\n\n\nAn example of changing a setting:\n\n\nenv.Replace(Mkdocs_CleanBuild = True)\nenv.Replace(Mkdocs_Strict = True)\n\n\n\n\nAvailable Options\n\n\n\n\n\n\n\n\nenv setting\n\n\nValues\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nMkdocs\n\n\n\u2018mkdocs\u2019\n\n\nOverride the executable / path to use\n\n\n\n\n\n\nMkdocs_WorkingDir\n\n\nCurrent Directory\n\n\nCan be set to override the working directory where mkdocs will be run\n\n\n\n\n\n\nMkdocs_CleanBuild\n\n\nNone (default), True, False\n\n\nIf to clean the build directory during the build (default is yes)\n\n\n\n\n\n\nMkdocs_Strict\n\n\nFalse (default), True\n\n\nIf to use mkdocs in strict mode\n\n\n\n\n\n\nMkdocs_SiteDir\n\n\n\u2018site\u2019 (default)\n\n\nThis setting controls the output directory for the html to be rendered\n\n\n\n\n\n\nMkdocs_Quiet\n\n\nFalse (default), True\n\n\nSilence warnings\n\n\n\n\n\n\nMkdocs_Verbose\n\n\nFalse (default), True\n\n\nEnable verbose output\n\n\n\n\n\n\nMkdocs_ExtraArgs\n\n\n[] (default)\n\n\nAdditional options to pass to mkdocs as an array",
            "title": "MkdocsJsonBuild"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsJsonBuild/#mkdocsjsonbuild",
            "text": "",
            "title": "MkdocsJsonBuild"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsJsonBuild/#overview",
            "text": "This builder can be used to trigger Mkdocs into building the source markdown into a json output on disk.\nThis can be used as an import into other tools.",
            "title": "Overview"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsJsonBuild/#example-useage",
            "text": "EnsureSConsVersion(3,0,0)\nenv = Environment(ENV = os.environ, tools = ['Docs.Mkdocs'], toolpath = [PyPackageDir('scons_tools_grbd.Tools')])\ntarget = env.MkdocsJsonBuild()\nDefault(target)  Optionally a source parameter can be passed to specify a different location of mkdocs.yml  target = env.MkdocsJsonBuild('someother.yml')  An example of changing a setting:  env.Replace(Mkdocs_CleanBuild = True)\nenv.Replace(Mkdocs_Strict = True)",
            "title": "Example useage:"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsJsonBuild/#available-options",
            "text": "env setting  Values  Description      Mkdocs  \u2018mkdocs\u2019  Override the executable / path to use    Mkdocs_WorkingDir  Current Directory  Can be set to override the working directory where mkdocs will be run    Mkdocs_CleanBuild  None (default), True, False  If to clean the build directory during the build (default is yes)    Mkdocs_Strict  False (default), True  If to use mkdocs in strict mode    Mkdocs_SiteDir  \u2018site\u2019 (default)  This setting controls the output directory for the html to be rendered    Mkdocs_Quiet  False (default), True  Silence warnings    Mkdocs_Verbose  False (default), True  Enable verbose output    Mkdocs_ExtraArgs  [] (default)  Additional options to pass to mkdocs as an array",
            "title": "Available Options"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsCombiner/",
            "text": "MkdocsCombiner\n\n\nOverview\n\n\nThis builder can be used to generate a file that can be imported into pandoc from mkdoc / markdown sources.\nPandoc can then be later used to generate a pdf or epub file from this .pd export file.\nThe output file is basically a combination of all pages into a single markdown file.\n\n\nNote to get this to work you\u2019ll need to install from git since mkdocs-combiner isn\u2019t currently published on pypi.\n\n\npip install git+https://github.com/twardoch/mkdocs-combine.git\n\n\n\n\nExample useage:\n\n\nEnsureSConsVersion(3,0,0)\nenv = Environment(ENV = os.environ, tools = ['Docs.Mkdocs'], toolpath = [PyPackageDir('scons_tools_grbd.Tools')])\ntarget = env.MkdocsCombiner()\nDefault(target)\n\n\n\n\nOptionally a source and target parameter can be passed to specify a different location for the mkdocs.yml and destination file\n\n\ntarget = env.MkdocsCombiner('docs/site.pd', 'someother.yml')\n\n\n\n\nAn example of changing a setting:\n\n\nenv.Replace(Mkdocs_Pandoc_Width = 100)\n\n\n\n\nAvailable Options\n\n\nFile Options\n\n\n\n\n\n\n\n\nenv setting\n\n\nValues\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nMkdocs_Combine\n\n\n\u2018mkdocscombine\u2019\n\n\nOverride the executable / path to use\n\n\n\n\n\n\nMkdocs_WorkingDir\n\n\nCurrent Directory\n\n\nCan be set to override the working directory where mkdocs will be run\n\n\n\n\n\n\nMkdocs_Combine_Encoding\n\n\nNone (default)\n\n\nCan be used to override the encoding for input files (default is utf-8)\n\n\n\n\n\n\nMkdocs_Combine_Exclude\n\n\nNone (default)\n\n\nInclude files to skip (default: none)\n\n\n\n\n\n\nMkdocs_Combine_OutputHtml\n\n\nFalse (default), True\n\n\nIf to output a single html page instead of markdown\n\n\n\n\n\n\n\n\nStructure options\n\n\n\n\n\n\n\n\nenv setting\n\n\nValues\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nMkdocs_Combine_Meta\n\n\nNone (default), True, False\n\n\nIf to keep YAML metadata (default), False = strip YAML metadata\n\n\n\n\n\n\nMkdocs_Combine_Titles\n\n\nNone (default), True, False\n\n\nAdd titles from mkdocs.yml to Markdown files (default), False = do not add titles to Markdown files\n\n\n\n\n\n\nMkdocs_Combine_Uplevels\n\n\nNone (default), True, False\n\n\nIncrease ATX header levels in Markdown files (default), False = do not increase ATX header levels in Markdown files\n\n\n\n\n\n\n\n\nTable options\n\n\n\n\n\n\n\n\nenv setting\n\n\nValues\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nMkdocs_Combine_PandocTables\n\n\nNone (default), True, False\n\n\nTrue = keep original Markdown tables (default), False = combine Markdown tables to Pandoc-style grid tables\n\n\n\n\n\n\nMkdocs_Combine_TableWidth\n\n\nNone (default)\n\n\nWidth of generated grid tables in characters (default: 100)\n\n\n\n\n\n\n\n\nLink options\n\n\n\n\n\n\n\n\nenv setting\n\n\nValues\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nMkdocs_Combine_Refs\n\n\nNone (default), True, False\n\n\nTrue = keep MkDocs-style cross-references, False = replace MkDocs-style cross-references by just their title (default)\n\n\n\n\n\n\nMkdocs_Combine_Anchors\n\n\nNone (default), True, False\n\n\nTrue = keep HTML anchor tags, False = strip out HTML anchor tags (default)\n\n\n\n\n\n\n\n\nExtra options\n\n\n\n\n\n\n\n\nenv setting\n\n\nValues\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nMkdocs_Combine_MathLatex\n\n\nNone (default), True, False\n\n\nTrue = combine the ( ) Markdown math into LaTeX $$ inlines, False = keep ( ) Markdown math notation as is (default)\n\n\n\n\n\n\nMkdocs_Combine_ImageExt\n\n\nNone (default)\n\n\nExtension to substitute image extensions by (default: no replacement)\n\n\n\n\n\n\nMkdocs_Combine_ExtraArgs\n\n\n[] (default)\n\n\nAdditional options to pass to mkdocs as an array",
            "title": "MkdocsCombiner"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsCombiner/#mkdocscombiner",
            "text": "",
            "title": "MkdocsCombiner"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsCombiner/#overview",
            "text": "This builder can be used to generate a file that can be imported into pandoc from mkdoc / markdown sources.\nPandoc can then be later used to generate a pdf or epub file from this .pd export file.\nThe output file is basically a combination of all pages into a single markdown file.  Note to get this to work you\u2019ll need to install from git since mkdocs-combiner isn\u2019t currently published on pypi.  pip install git+https://github.com/twardoch/mkdocs-combine.git",
            "title": "Overview"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsCombiner/#example-useage",
            "text": "EnsureSConsVersion(3,0,0)\nenv = Environment(ENV = os.environ, tools = ['Docs.Mkdocs'], toolpath = [PyPackageDir('scons_tools_grbd.Tools')])\ntarget = env.MkdocsCombiner()\nDefault(target)  Optionally a source and target parameter can be passed to specify a different location for the mkdocs.yml and destination file  target = env.MkdocsCombiner('docs/site.pd', 'someother.yml')  An example of changing a setting:  env.Replace(Mkdocs_Pandoc_Width = 100)",
            "title": "Example useage:"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsCombiner/#available-options",
            "text": "",
            "title": "Available Options"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsCombiner/#file-options",
            "text": "env setting  Values  Description      Mkdocs_Combine  \u2018mkdocscombine\u2019  Override the executable / path to use    Mkdocs_WorkingDir  Current Directory  Can be set to override the working directory where mkdocs will be run    Mkdocs_Combine_Encoding  None (default)  Can be used to override the encoding for input files (default is utf-8)    Mkdocs_Combine_Exclude  None (default)  Include files to skip (default: none)    Mkdocs_Combine_OutputHtml  False (default), True  If to output a single html page instead of markdown",
            "title": "File Options"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsCombiner/#structure-options",
            "text": "env setting  Values  Description      Mkdocs_Combine_Meta  None (default), True, False  If to keep YAML metadata (default), False = strip YAML metadata    Mkdocs_Combine_Titles  None (default), True, False  Add titles from mkdocs.yml to Markdown files (default), False = do not add titles to Markdown files    Mkdocs_Combine_Uplevels  None (default), True, False  Increase ATX header levels in Markdown files (default), False = do not increase ATX header levels in Markdown files",
            "title": "Structure options"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsCombiner/#table-options",
            "text": "env setting  Values  Description      Mkdocs_Combine_PandocTables  None (default), True, False  True = keep original Markdown tables (default), False = combine Markdown tables to Pandoc-style grid tables    Mkdocs_Combine_TableWidth  None (default)  Width of generated grid tables in characters (default: 100)",
            "title": "Table options"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsCombiner/#link-options",
            "text": "env setting  Values  Description      Mkdocs_Combine_Refs  None (default), True, False  True = keep MkDocs-style cross-references, False = replace MkDocs-style cross-references by just their title (default)    Mkdocs_Combine_Anchors  None (default), True, False  True = keep HTML anchor tags, False = strip out HTML anchor tags (default)",
            "title": "Link options"
        },
        {
            "location": "/Builders/Mkdocs/MkdocsCombiner/#extra-options",
            "text": "env setting  Values  Description      Mkdocs_Combine_MathLatex  None (default), True, False  True = combine the ( ) Markdown math into LaTeX $$ inlines, False = keep ( ) Markdown math notation as is (default)    Mkdocs_Combine_ImageExt  None (default)  Extension to substitute image extensions by (default: no replacement)    Mkdocs_Combine_ExtraArgs  [] (default)  Additional options to pass to mkdocs as an array",
            "title": "Extra options"
        },
        {
            "location": "/Builders/MSBuild/VC/Dll2Lib/",
            "text": "Dll2Lib\n\n\nOverview\n\n\nThis builder can be used to generate a lib file from a dll. \n\nThe lib file can then be linked into an existing project. \n\nThis uses dumpfile to export a list of symbols:\n\n\nTypically:\n\n\ndumpbin /exports C:\\yourpath\\yourlib.dll\n\n\n\n\nThe list of symbols is then written to a .def file. \n\nThe lib command is then used to generate the .lib file from the .def file\n\n\nlib /def:C:\\mypath\\mylib.def /OUT:C:\\mypath\\mylib.lib\n\n\n\n\nA side affect of this is an .exp file which also requires cleanup\n\n\nExample useage:\n\n\nEnsureSConsVersion(3,0,0)\nenv = Environment(ENV = os.environ, tools = ['default', 'MSBuild'], toolpath = [PyPackageDir('scons_tools_grbd.Tools')])\ntarget = env.Dll2Lib('D:\\\\Temp\\\\SomeDll.dll')\nDefault(target)\n\n\n\n\nOptionally a target parameter can be passed to specify a different location of the destination .lib file\n\n\ntarget = env.Dll2Lib('D:\\\\Temp\\\\test1.lib', 'D:\\\\Temp\\\\SomeDll.dll')\n\n\n\n\nAn example of changing a setting:\n\n\nenv.Replace(DUMPBIN = 'dumpbin')\n\n\n\n\nAvailable Options\n\n\n\n\n\n\n\n\nenv setting\n\n\nValues\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nDUMPBIN\n\n\n\u2018dumpbin\u2019\n\n\nOverride the executable / path to use",
            "title": "DLL2Lib"
        },
        {
            "location": "/Builders/MSBuild/VC/Dll2Lib/#dll2lib",
            "text": "",
            "title": "Dll2Lib"
        },
        {
            "location": "/Builders/MSBuild/VC/Dll2Lib/#overview",
            "text": "This builder can be used to generate a lib file from a dll.  \nThe lib file can then be linked into an existing project.  \nThis uses dumpfile to export a list of symbols:  Typically:  dumpbin /exports C:\\yourpath\\yourlib.dll  The list of symbols is then written to a .def file.  \nThe lib command is then used to generate the .lib file from the .def file  lib /def:C:\\mypath\\mylib.def /OUT:C:\\mypath\\mylib.lib  A side affect of this is an .exp file which also requires cleanup",
            "title": "Overview"
        },
        {
            "location": "/Builders/MSBuild/VC/Dll2Lib/#example-useage",
            "text": "EnsureSConsVersion(3,0,0)\nenv = Environment(ENV = os.environ, tools = ['default', 'MSBuild'], toolpath = [PyPackageDir('scons_tools_grbd.Tools')])\ntarget = env.Dll2Lib('D:\\\\Temp\\\\SomeDll.dll')\nDefault(target)  Optionally a target parameter can be passed to specify a different location of the destination .lib file  target = env.Dll2Lib('D:\\\\Temp\\\\test1.lib', 'D:\\\\Temp\\\\SomeDll.dll')  An example of changing a setting:  env.Replace(DUMPBIN = 'dumpbin')",
            "title": "Example useage:"
        },
        {
            "location": "/Builders/MSBuild/VC/Dll2Lib/#available-options",
            "text": "env setting  Values  Description      DUMPBIN  \u2018dumpbin\u2019  Override the executable / path to use",
            "title": "Available Options"
        }
    ]
}